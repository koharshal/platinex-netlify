---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
import BaseLayout from './BaseLayout.astro'
import Tag from '../components/Tag.astro'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'

type Props = {
	id: CollectionEntry<'blog'>['id']
	data: CollectionEntry<'blog'>['data']
	headings: MarkdownHeading[]
	readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, description, pubDate, heroImage, tags } = data

const articleDate = pubDate.toISOString()
---

<BaseLayout
	title={title}
	description={description}
	image={heroImage?.src}
	articleDate={articleDate}
>
	<div class='mx-auto w-full max-w-7xl px-4 sm:px-6 lg:px-8'>
		<article class='min-w-full'>
			<!-- Hero Header -->
			<header class='mb-8 text-center'>
				<div class='mb-6'>
					<div
						class='flex items-center justify-center gap-4 text-sm text-stone-500 dark:text-stone-400 mb-6'
					>
						<span class='flex items-center gap-2'>
							<svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
								<path
									stroke-linecap='round'
									stroke-linejoin='round'
									stroke-width='2'
									d='M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z'
								></path>
							</svg>
							<FormattedDate date={pubDate} />
						</span>
						<span class='w-1 h-1 bg-stone-400 rounded-full'></span>
						<span class='flex items-center gap-2'>
							<svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
								<path
									stroke-linecap='round'
									stroke-linejoin='round'
									stroke-width='2'
									d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'></path>
							</svg>
							{readTime} read
						</span>
					</div>
					<h1
						class='text-3xl md:text-5xl font-bold leading-tight tracking-tight mb-4 text-stone-900 dark:text-white font-heading'
					>
						{title}
					</h1>
					<p class='text-lg text-stone-600 dark:text-stone-400 max-w-2xl mx-auto leading-relaxed'>
						{description}
					</p>
				</div>

				{/* Tags */}
				<div class='flex flex-wrap justify-center items-center gap-2 gap-y-2'>
					{tags.map((tag) => <Tag tag={tag} />)}
				</div>
			</header>

			{/* Hero Image */}
			{
				heroImage && (
					<div class='mb-8'>
						<Image
							src={heroImage}
							width={1000}
							height={500}
							quality={100}
							format='jpg'
							loading='eager'
							class='rounded-xl w-full max-h-[400px] md:max-h-[500px] object-cover shadow-lg'
							alt={`Hero image for ${title}`}
						/>
					</div>
				)
			}

			{/* Content */}
			<div
				class='prose prose-stone dark:prose-invert max-w-none prose-headings:text-stone-900 prose-headings:dark:text-white prose-p:text-stone-700 prose-p:dark:text-stone-300 prose-a:text-accent prose-a:dark:text-accent prose-strong:text-stone-900 prose-strong:dark:text-white prose-p:mb-3 prose-headings:mb-4 prose-h2:font-heading prose-h3:font-heading prose-h4:font-heading prose-h2:text-2xl prose-h3:text-xl prose-h4:text-lg'
			>
				<slot />
			</div>
		</article>
	</div>
</BaseLayout>
